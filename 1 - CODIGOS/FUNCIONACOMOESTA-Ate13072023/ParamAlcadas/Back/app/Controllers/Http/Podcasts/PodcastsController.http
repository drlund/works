###
# .getCanais
# Não são necessários parâmetros
# Não precisa de permissão de acesso
GET  http://localhost:3333/podcasts/canais

###
# .getCanal
# params: id
# Não precisa de permissão de acesso
GET  http://localhost:3333/podcasts/canal/59

###
# .postCanal
# params: nome, descricao, file
# Acesso necessário: Podcasts > GERENCIAR

POST http://localhost:3333/podcasts/gerenciar/postCanal
Content-Type: multipart/form-data; boundary=abc

--abc
Content-Disposition: form-data; name="file"; filename="mockCapa.png"
Content-Type: image/png

../Commons/Carrossel/__mocks__/mockCapa.png
--abc
Content-Disposition: form-data; name="nome"

Lorem ipsum
--abc
Content-Disposition: form-data; name="descricao"

Lorem ipsum dolor sit amet, consectetur adipiscing elit.
--abc--

###
# .updateCanal
# params: nome, descricao, file
# Acesso necessário: Podcasts > GERENCIAR
# Teste edição apenas nome

POST http://localhost:3333/podcasts/gerenciar/updateCanal
content-type: application/json

{ "id" : "3", "novoNome": "Eventos nome editado" }

###
# .updateCanal
# params: nome, descricao, file
# Acesso necessário: Podcasts > GERENCIAR
# Teste edição apenas descrição

POST http://localhost:3333/podcasts/gerenciar/updateCanal
content-type: application/json

{ "id" : "3", "novaDescricao" : "Edit: Confira aqui informações sobre os eventos do banco" }

###
# .updateCanal
# params: nome, descricao, file
# Acesso necessário: Podcasts > GERENCIAR
# Teste edição nome e descrição

POST http://localhost:3333/podcasts/gerenciar/updateCanal
content-type: application/json

{ "id" : "3", "novoNome": "Eventos nome", "novaDescricao" : "Confira aqui informações sobre os eventos do banco" }

###
# .updateCapaCanal
# params: id, file
# Acesso necessário: Podcasts > GERENCIAR
#

POST http://localhost:3333/podcasts/gerenciar/updateCapaCanal
Content-Type: multipart/form-data; boundary=abc

--abc
Content-Disposition: form-data; name="id"

1
--abc
Content-Disposition: form-data; name="file"; filename="mockCapa.png"
Content-Type: image/png

../Commons/Carrossel/__mocks__/mockCapa.png
--abc--

###
# .deleteCanal
# params: id
# Acesso necessário: Podcasts > GERENCIAR
# Deletar um canal
POST http://localhost:3333/podcasts/gerenciar/deleteCanal
Content-Type: application/json

{ "id": 54 }

###
# .getEpisodios
# Não são necessários parâmetros
# Não utiliza o isTokenValid, não necessita de concessão de acesso
GET  http://localhost:3333/podcasts/episodios

###
# .getEpisodio
# params: id
# Não precisa de permissão de acesso
GET  http://localhost:3333/podcasts/episodio/114

###
# .postEpisodio
# params: nomeEpisodio, idCanal, videoEpisodio, tags
# Acesso necessário: Podcasts > GERENCIAR
#
POST http://localhost:3333/podcasts/episodios/postEpisodio
Content-Type: multipart/form-data; boundary=abc

--abc
Content-Disposition: form-data; name="idCanal"

1
--abc
Content-Disposition: form-data; name="file"; filename="mock-video.mp4"
Content-Type: video/mp4

../Commons/Podcasts/__mocks__/mock-video.mp4
--abc
Content-Disposition: form-data; name="nomeEpisodio"

Novo episodio
--abc
Content-Disposition: form-data; name="tags"

{"existentes":[1,4],"novas":["Tecnologia","Framework", "UI"]}
--abc--

###
# .updateEpisodio
# params: id, titulo
# Acesso necessário: Podcasts > GERENCIAR
# Renomear título

POST http://localhost:3333/podcasts/episodios/updateEpisodio
Content-Type: application/json

{ "id": 2, "titulo":"Novo titulo" }

###
# .deleteEpisodio
# params: id
# Acesso necessário: Podcasts > GERENCIAR
# Deletar um episódio
POST http://localhost:3333/podcasts/episodios/deleteEpisodio
Content-Type: application/json

{ "id": 93 }

###
# .getLikesEpisodios
# Não são necessários parâmetros
# Não utiliza o isTokenValid, não necessita de concessão de acesso
GET  http://localhost:3333/podcasts/likesEpisodios


###
# .toggleCurtir
# Não são necessários parâmetros
# Não precisa de acesso específico, mas precisa estar logado para funcionar
POST http://localhost:3333/podcasts/episodios/toggleCurtir
Content-Type: application/json

{ "idEpisodio": 116 }


###
# .getTags
# Não são necessários parâmetros
# Não utiliza o isTokenValid, não necessita de concessão de acesso
GET  http://localhost:3333/podcasts/tags

###
# .postTags
#  params: nome
#  Acesso necessário: Podcasts > GERENCIAR
#  Caso já existe tag para esse nome retorna: "Já existe uma tag com esse nome"
POST http://localhost:3333/podcasts/tags/postTag
Content-Type: application/json

{ "nome": "Prototipação" }


###
# .deleteTags
# params: id
# Não utiliza o isTokenValid, não necessita de concessão de acesso
POST  http://localhost:3333/podcasts/tags/deleteTag
Content-Type: application/json

{ "id": 29 }
